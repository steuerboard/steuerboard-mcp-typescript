/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export const WebhooksTaskCommentCreatedAction$zodSchema = z.enum([
  "CREATED",
  "UPDATED",
  "DELETED",
  "ARCHIVED",
]);

export type WebhooksTaskCommentCreatedAction = z.infer<
  typeof WebhooksTaskCommentCreatedAction$zodSchema
>;

export const WebhooksTaskCommentCreatedResource$zodSchema = z.enum([
  "TASK_COMMENT",
]);

export type WebhooksTaskCommentCreatedResource = z.infer<
  typeof WebhooksTaskCommentCreatedResource$zodSchema
>;

export type WebhooksTaskCommentCreatedData = {
  id: string;
  text: string;
  createdAt: string;
  updatedAt: string;
  createdById: string;
  taskId: string;
};

export const WebhooksTaskCommentCreatedData$zodSchema: z.ZodType<
  WebhooksTaskCommentCreatedData,
  z.ZodTypeDef,
  unknown
> = z.object({
  createdAt: z.string(),
  createdById: z.string(),
  id: z.string(),
  taskId: z.string(),
  text: z.string(),
  updatedAt: z.string(),
});

/**
 * Webhook
 */
export type WebhooksTaskCommentCreatedRequest = {
  eventTimestamp: string;
  action: WebhooksTaskCommentCreatedAction;
  clientId: string;
  workspaceId: string | null;
  resource: WebhooksTaskCommentCreatedResource;
  data: WebhooksTaskCommentCreatedData;
};

export const WebhooksTaskCommentCreatedRequest$zodSchema: z.ZodType<
  WebhooksTaskCommentCreatedRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  action: WebhooksTaskCommentCreatedAction$zodSchema,
  clientId: z.string(),
  data: z.lazy(() => WebhooksTaskCommentCreatedData$zodSchema),
  eventTimestamp: z.string(),
  resource: WebhooksTaskCommentCreatedResource$zodSchema,
  workspaceId: z.string().nullable(),
}).describe("Webhook");

export type WebhooksTaskCommentCreatedResponse = {
  ContentType: string;
  StatusCode: number;
  RawResponse: Response;
};

export const WebhooksTaskCommentCreatedResponse$zodSchema: z.ZodType<
  WebhooksTaskCommentCreatedResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  ContentType: z.string(),
  RawResponse: z.instanceof(Response),
  StatusCode: z.number().int(),
});
