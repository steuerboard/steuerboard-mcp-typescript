/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The type of the client
 */
export const Type$zodSchema = z.enum([
  "natural_person",
  "individual_enterprise",
  "legal_person",
]).describe("The type of the client");

export type Type = z.infer<typeof Type$zodSchema>;

export type Client = {
  id: string;
  name: string;
  slug: string;
  type: Type;
  customId: string | null;
  legalName: string | null;
  archivedAt: string | null;
  datevClientId: string | null;
  createdAt: string;
  updatedAt: string;
};

export const Client$zodSchema: z.ZodType<Client, z.ZodTypeDef, unknown> = z
  .object({
    archivedAt: z.string().nullable(),
    createdAt: z.string(),
    customId: z.string().nullable(),
    datevClientId: z.string().nullable(),
    id: z.string(),
    legalName: z.string().nullable(),
    name: z.string(),
    slug: z.string(),
    type: Type$zodSchema,
    updatedAt: z.string(),
  });
