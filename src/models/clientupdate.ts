/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * The type of the client. 'natural_person' for individuals, 'legal_person' for companies like UG, GmbH, AG, Ltd., Inc., etc. and 'individual_enterprise' for sole proprietorships.
 */
export const ClientUpdateClientType$zodSchema = z.enum([
  "natural_person",
  "individual_enterprise",
  "legal_person",
]).describe(
  "The type of the client. 'natural_person' for individuals, 'legal_person' for companies like UG, GmbH, AG, Ltd., Inc., etc. and 'individual_enterprise' for sole proprietorships.",
);

export type ClientUpdateClientType = z.infer<
  typeof ClientUpdateClientType$zodSchema
>;

/**
 * The address of the client
 */
export type ClientUpdateAddress = {
  line1: string;
  line2?: string | undefined;
  city: string;
  postalCode: string;
  countryCode?: string | undefined;
};

export const ClientUpdateAddress$zodSchema: z.ZodType<
  ClientUpdateAddress,
  z.ZodTypeDef,
  unknown
> = z.object({
  city: z.string(),
  countryCode: z.string().default("DE"),
  line1: z.string(),
  line2: z.string().optional(),
  postalCode: z.string(),
}).describe("The address of the client");

export type ClientUpdate = {
  name?: string | undefined;
  type?: ClientUpdateClientType | undefined;
  customId?: string | null | undefined;
  legalName?: string | null | undefined;
  address?: ClientUpdateAddress | null | undefined;
};

export const ClientUpdate$zodSchema: z.ZodType<
  ClientUpdate,
  z.ZodTypeDef,
  unknown
> = z.object({
  address: z.lazy(() => ClientUpdateAddress$zodSchema).nullable().optional(),
  customId: z.string().nullable().optional(),
  legalName: z.string().nullable().optional(),
  name: z.string().optional(),
  type: ClientUpdateClientType$zodSchema.optional(),
});
