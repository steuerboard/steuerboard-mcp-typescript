/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { tasksDeleteTask } from "../../funcs/tasksDeleteTask.js";
import { DeleteTaskRequest$zodSchema } from "../../models/deletetaskop.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: DeleteTaskRequest$zodSchema,
};

export const tool$tasksDeleteTask: ToolDefinition<typeof args> = {
  name: "tasks-delete-task",
  description: `Delete a task

Deletes a task by ID.`,
  annotations: {
    "destructiveHint": true,
    "idempotentHint": false,
    "openWorldHint": false,
    "readOnlyHint": false,
  },
  args,
  tool: async (client, args, ctx) => {
    const [result, apiCall] = await tasksDeleteTask(
      client,
      args.request,
      { fetchOptions: { signal: ctx.signal } },
    ).$inspect();

    if (!result.ok) {
      return {
        content: [{ type: "text", text: result.error.message }],
        isError: true,
      };
    }

    const value = result.value;

    return formatResult(value, apiCall);
  },
};
