/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { adminUsersInviteAccountantUser } from "../../funcs/adminUsersInviteAccountantUser.js";
import { InviteAccountantUser$zodSchema } from "../../models/inviteaccountantuser.js";
import { formatResult, ToolDefinition } from "../tools.js";

const args = {
  request: InviteAccountantUser$zodSchema,
};

export const tool$adminUsersInviteAccountantUser: ToolDefinition<typeof args> =
  {
    name: "admin-users-invite-accountant-user",
    description: `Invite an accountant user

Invites a new accountant user and returns the created record.`,
    annotations: {
      "title": "",
      "destructiveHint": false,
      "idempotentHint": false,
      "openWorldHint": false,
      "readOnlyHint": false,
    },
    args,
    tool: async (client, args, ctx) => {
      const [result, apiCall] = await adminUsersInviteAccountantUser(
        client,
        args.request,
        { fetchOptions: { signal: ctx.signal } },
      ).$inspect();

      if (!result.ok) {
        return {
          content: [{ type: "text", text: result.error.message }],
          isError: true,
        };
      }

      const value = result.value;

      return formatResult(value, apiCall);
    },
  };
